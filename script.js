// Используются функции, циклы, массивы, объекты
// Есть взаимодействие через alert/prompt/confirm

// Когда DOM полностью загружен
document.addEventListener('DOMContentLoaded', () => {
  // ... внутри этого блока будет всё наше основное взаимодействие
/* Что делает:
Это событие DOMContentLoaded — оно срабатывает, когда вся HTML-страница полностью загружена и
структура DOM (Document Object Model) готова к манипуляциям.
Зачем нужно:
Чтобы убедиться, что все элементы страницы доступны, прежде чем к ним обращаться через JavaScript.  */
  
  // Обработка кнопки "Узнать смешной факт" на главной странице
  const funnyBtn = document.getElementById('funnyBtn');
  if (funnyBtn) {
    funnyBtn.addEventListener('click', () => {
/* Что делает:
document.getElementById('funnyBtn') — ищет на странице кнопку с ID funnyBtn.
if (funnyBtn) — проверяет, существует ли такая кнопка (чтобы избежать ошибок, если вдруг её нет).
addEventListener('click', ...) — добавляет обработчик события клика на кнопку.
Зачем нужно:
Чтобы при клике на кнопку запускать определённую функцию — в нашем случае, показывать шутку и картинку. */
      
      // Массив шуток и фактов
      const facts = [
        "Почему программисты любят кофе? Потому что он помогает им оставаться в цикле!",
        "Что делает разработчик, когда он скучает? Он переходит в режим отладки.",
        "Почему тестировщики не любят рыбу? Потому что она всегда плавает в ошибках.",
        "Как программист сверяет часы? Он использует setTimeout!"
      ];
  /* Что делает:
Создаёт массив из строк — каждый элемент массива это шутка или факт.
Зачем нужен:
Чтобы случайным образом выбирать один из них при клике. Массив — это структура данных для хранения нескольких значений.  */

      // Объект с картинками
      const images = {
        coffee: 'images/кофе.png',
        bug: 'images/баг.png',
        code: 'images/код.png'
      };
      /* Что делает:
Создаёт объект — набор ключей (coffee, bug, code) и соответствующих путей к картинкам.
Зачем нужен:
Чтобы динамически получать разные картинки, связанные с шутками или фактами.  */

      // Функция получения случайного элемента массива
      function getRandom(arr) {
        return arr[Math.floor(Math.random() * arr.length)];
      }
      /* Что делает:  
 Math.random() — генерирует случайное число от 0 до 1.
Умножение на arr.length — масштабирует число до диапазона длины массива.
Math.floor() — округляет число вниз до целого, чтобы получить индекс массива.
arr[...] — возвращает элемент массива по случайному индексу.
Зачем нужен:
Чтобы выбрать случайный шутку или картинку из массива или объекта. */

      // Вызов функции для получения случайной шутки
      const joke = getRandom(facts);
      alert(`Факт: ${joke}`);
      /* Что делает:  
Выбирает случайную шутку из массива facts.
Показывает её пользователю через окно alert() с подписью "Факт:".
Зачем нужно:
Обеспечить взаимодействие: пользователь видит случайную шутку. */

      // Выбор случайной картинки
      const imageKeys = Object.keys(images);
      const randomKey = getRandom(imageKeys);
      const imgSrc = images[randomKey];

      // Открываем новое окно с картинкой
      const imgWindow = window.open();
      imgWindow.document.write(`<h3>Посмотрите на это!</h3>`);
      imgWindow.document.write(`<img src="${imgSrc}" alt="IT шутка" style="max-width:100%;height:auto;">`);
    });
  }
  /* Выбор случайной картинки и открытие нового окна
  Что делает:  
Object.keys(images) — получает массив ключей объекта images (['coffee','bug','code']).
getRandom(imageKeys) — выбирает случайный ключ из этого массива.
images[randomKey] — получает путь к картинке по выбранному ключу.
window.open() — открывает новое окно или вкладку браузера.
В это окно вставляется HTML-код через document.write(): заголовок и изображение с выбранным путём.
Зачем нужно:
Показать пользователю картинку, связанную с выбранной шуткой, в отдельной вкладке. */

  // Обработка кнопки "Добавить свою шутку" на странице шуток
  const addJokeBtn = document.getElementById('addJokeBtn');
  if (addJokeBtn) {
    addJokeBtn.addEventListener('click', () => {
      // Используем prompt для ввода новой шутки
      const newJoke = prompt('Введите свою IT-шутку:');
      if (newJoke && newJoke.trim() !== '') {
        // Находим список шуток
        const jokeList = document.getElementById('jokeList');
        // Создаем новый элемент списка
        const li = document.createElement('li');
        li.textContent = newJoke;
        // Добавляем в список
        jokeList.appendChild(li);
        // Подтверждение
        alert('Ваша шутка добавлена!');
      } else {
        // Отмена или пустой ввод
        alert('Шутка не добавлена.');
      }
    });
  }
  /* Что делает:
  Находит кнопку по ID addJokeBtn.
При клике вызывает функцию-обработчик.
Внутри обработчика:
prompt() — показывает диалог для ввода текста шутки.
Проверяет, что пользователь что-то ввёл (newJoke) и что строка не пустая (trim() !== '').
Находит список ul с ID jokeList.
Создаёт новый элемент li (элемент списка).
Устанавливает текст этого элемента — введённую шутку.
Добавляет этот элемент в список (appendChild).
Показывает подтверждение через alert().
Если пользователь ничего не ввёл или отменил — выводит сообщение, что шутка не добавлена.
Зачем нужно:
Дать возможность пользователю добавлять свои шутки в список на странице. */
});

/* Этот скрипт реализует несколько ключевых задач:  

Обработку кликов по кнопкам.
Генерацию случайных элементов из массивов и объектов.
Взаимодействие с пользователем через окна alert, prompt.
Динамическое изменение содержимого страницы (добавление элементов).
Открытие новых окон с контентом (картинки). */
